<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
				
					
	<!-- Turns on support for mapping requests to Spring MVC @Controller methods
	     Also registers default Formatters and Validators for use across all @Controllers -->
	<mvc:annotation-driven/>
	
	<context:component-scan base-package="com.tmm.nosql.mongodb"></context:component-scan>
	
	<mvc:resources mapping="/resouces/**" location="/styles, /images, /javascript, /libs" />
	
		<!-- a higher value meaning greater in terms of sorting.  -->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" p:order="3">
		<property name="alwaysUseFullPath" value="true" />
	</bean>
	
	<!-- register "global" interceptor beans to apply to all registered HandlerMappings -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor"/>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" p:paramName="lang"/>
	</mvc:interceptors>
	
	<!-- selects a static view for rendering without the need for an explicit controller -->
	<mvc:view-controller path="/login"/>
	<mvc:view-controller path="/uncaughtException"/>
	<mvc:view-controller path="/resourceNotFound"/>
	<mvc:view-controller path="/dataAccessFailure"/>

	<!-- Resolves logical view names returned by Controllers to Tiles; a view
		 name to resolve is treated as the name of a tiles definition -->
	<bean class="org.springframework.js.ajax.AjaxUrlBasedViewResolver" id="tilesViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
	</bean>

	<!-- Configures the Tiles layout system -->
	<bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer" id="tilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/layouts/layouts.xml</value>
				<!-- Scan views directory for Tiles configurations -->
				<value>/WEB-INF/views/**/views.xml</value>
			</list>
		</property>
	</bean>

	<!-- Resolves localized messages*.properties and application.properties files in the application to	allow for internationalization. 
		The messages*.properties files translate Roo generated messages which are part of the admin interface, the application.properties
		resource bundle localizes all application specific messages such as entity names and menu items. -->
	<bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource" id="messageSource" p:basenames="WEB-INF/i18n/messages,WEB-INF/i18n/application" p:fallbackToSystemLocale="false"/>
	
	<!-- store preferred language configuration in a cookie -->
	<bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver" id="localeResolver" p:cookieName="locale"/>	
	
	<!-- resolves localized <theme_name>.properties files in the classpath to allow for theme support -->
	<bean class="org.springframework.ui.context.support.ResourceBundleThemeSource" id="themeSource"/>
	
	<!-- store preferred theme configuration in a cookie -->
	<bean class="org.springframework.web.servlet.theme.CookieThemeResolver" id="themeResolver" p:cookieName="theme" p:defaultThemeName="standard"/>

	<!-- This bean resolves specific types of exceptions to corresponding logical - view names for error views. 
	     The default behaviour of DispatcherServlet - is to propagate all exceptions to the servlet container: 
	     this will happen - here with all other types of exceptions. -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" p:defaultErrorView="uncaughtException">
		<property name="exceptionMappings">
			<props>
				<prop key=".DataAccessException">dataAccessFailure</prop>
				<prop key=".NoSuchRequestHandlingMethodException">resourceNotFound</prop>
				<prop key=".TypeMismatchException">resourceNotFound</prop>
				<prop key=".MissingServletRequestParameterException">resourceNotFound</prop>
			</props>
		</property>
	</bean>
	
	
	<!-- Controllers --> 
    <bean id="homeController" class="com.tmm.nosql.mongodb.controller.HomeController"></bean>
    <bean id="profileController" class="com.tmm.nosql.mongodb.controller.ProfileController"></bean>
	
	<!-- URL Mapping -->    
    <bean id="handlerMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">        
        <property name="alwaysUseFullPath" value="true" />
        <property name="mappings">
            <props>
                <prop key="/anonhome.html">homeController</prop>
                <prop key="/profile/**">profileController</prop>
            </props>
        </property>
    </bean>
	
	<!-- allows for integration of file upload functionality -->
	<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver"/>
	
	<bean id="ajaxViewResolver"
        class="com.tmm.nosql.mongodb.views.AjaxViewResolver">
        <property name="ajaxView">
            <bean class="com.tmm.nosql.mongodb.views.AjaxView" />
        </property>
        <property name="ajaxPrefix" value="ajax_"></property>
    </bean>
</beans>
